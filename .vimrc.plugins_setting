"-------------------------------------------------------------------------------
" プラグインごとの設定 Plugins
"-------------------------------------------------------------------------------
" やんくの履歴を表示する
nnoremap <silent>y<C-p> :<C-u>CtrlPYankRound<CR>

" nerdtreeのキーバインド
nmap <silent> <C-e>      :NERDTreeToggle<CR>
vmap <silent> <C-e> <Esc>:NERDTreeToggle<CR>
omap <silent> <C-e>      :NERDTreeToggle<CR>
imap <silent> <C-e> <Esc>:NERDTreeToggle<CR>
cmap <silent> <C-e> <C-u>:NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let g:NERDTreeIgnore=['\.clean$', '\.swp$', '\.bak$', '\~$']
let g:NERDTreeShowHidden=1
let g:NERDTreeMinimalUI=1
let g:NERDTreeMouseMode=2

" vimshellのキーバインド
nnoremap <Leader>vs :VimShellPop<CR>

" Uniteでのgrep設定
let g:unite_enable_start_insert = 1
let g:unite_enable_ignore_case = 1
let g:unite_enable_smart_case = 1
nnoremap <silent> <Leader>g  :<C-u>Unite grep:. -buffer-name=search-buffer<CR>
nnoremap <silent> <Leader>cg :<C-u>Unite grep:. -buffer-name=search-buffer<CR><C-R><C-W>
nnoremap <silent> <Leader>r  :<C-u>UniteResume search-buffer<CR>
if executable('ag')
  let g:unite_source_grep_command = 'ag'
  let g:unite_source_grep_default_opts = '--nogroup --nocolor --column'
  let g:unite_source_grep_recursive_opt = ''
endif

" vim-moveのキーバインド
let g:move_key_modifier = 'C'

" vim-rubocopのキーバインド
let g:vimrubocop_keymap = 0
nmap <Leader>r :RuboCop<CR>

" syntasticからrubocopを実行する設定
let g:syntastic_mode_map = { 'mode': 'passive',
               \ 'passive_filetypes': ['ruby'] }
let g:syntastic_ruby_checkers = ['rubocop']
nnoremap <Leader>rb :SyntasticToggleMode<CR>

" nerdcommenterのキーバインド
let NERDSpaceDelims = 1
nmap <C-o> <Plug>NERDCommenterToggle
vmap <C-o> <Plug>NERDCommenterToggle

" Tabularizeのキーバインド
nnoremap <silent> <Leader>a= :Tabularize /=<CR>
vnoremap <silent> <Leader>a= :Tabularize /=<CR>
nnoremap <silent> <Leader>a: :Tabularize /:\zs<CR>
vnoremap <silent> <Leader>a: :Tabularize /:\zs<CR>
nnoremap <Leader>a :Tabularize /
vnoremap <Leader>a :Tabularize /

" tagbarのキーバインド
nnoremap <silent> <leader>d :TagbarToggle<CR>

" vim-bundlerのキーバインド
nnoremap <silent> <Leader>b :Dispatch bundle install<CR>

" vim-rspecのキーバインド
nnoremap <Leader>t :call RunCurrentSpecFile()<CR>
nnoremap <Leader>s :call RunNearestSpec()<CR>
nnoremap <Leader>l :call RunLastSpec()<CR>

" vim-rspecの設定
let g:rspec_command = "Dispatch spring rspec {spec}"

" vim-submodeの設定
call submode#enter_with('bufmove', 'n', '', 's>', '<C-w>>')
call submode#enter_with('bufmove', 'n', '', 's<', '<C-w><')
call submode#enter_with('bufmove', 'n', '', 's+', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', 's-', '<C-w>-')
call submode#map('bufmove', 'n', '', '>', '<C-w>>')
call submode#map('bufmove', 'n', '', '<', '<C-w><')
call submode#map('bufmove', 'n', '', '+', '<C-w>+')
call submode#map('bufmove', 'n', '', '-', '<C-w>-')

" vim-airlineの設定
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = '⮀'
let g:airline#extensions#tabline#left_alt_sep = '⮁'
let g:airline_left_sep = '⮀'
let g:airline_left_alt_sep = '⮁'
let g:airline_right_sep = '⮂'
let g:airline_right_alt_sep = '⮃'
let g:airline_symbols.branch = '⭠'
let g:airline_symbols.readonly = '⭤'
let g:airline_symbols.linenr = '⭡'
let g:airline_theme='wombat'

" supertab
let g:SuperTabDefaultCompletionType = "<c-n>"

" rubyjump
nmap <silent> <Space> <plug>(rubyjump)

" vim-easy-align
vmap <Enter> <Plug>(EasyAlign)
nmap <Leader>a <Plug>(EasyAlign)

" indentLine
let g:indentLine_color_term = '214'
let g:indentLine_color_gui  = '#cb4b16'

" unite-rails
nnoremap <silent> <Leader>rm :<C-u>Unite rails/model<CR>
nnoremap <silent> <Leader>rc :<C-u>Unite rails/controller<CR>
nnoremap <silent> <Leader>rv :<C-u>Unite rails/view<CR>
nnoremap <silent> <Leader>rs :<C-u>Unite rails/stylesheet<CR>
nnoremap <silent> <Leader>rj :<C-u>Unite rails/javascript<CR>
nnoremap <silent> <Leader>rr :<C-u>Unite rails/route<CR>
nnoremap <silent> <Leader>rh :<C-u>Unite rails/helper<CR>
nnoremap <silent> <Leader>rd :<C-u>Unite rails/db<CR>
nnoremap <silent> <Leader>rl :<C-u>Unite rails/lib<CR>

" vim-surround
" erb
autocmd FileType eruby let b:surround_{char2nr('=')} = "<%= \r %>"
autocmd FileType eruby let b:surround_{char2nr('-')} = "<% \r %>"
